name: Backend workflow

on:
  push:
    branches:
      - develop

jobs:

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend
        uses: docker/build-push-action@v2
        with:
          context: ./creating_and_editing_a_resume
          push: true
          tags: evol93/backend_resume:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |

            sudo rm .env
            sudo touch .env
            sudo chmod 666 .env

            sudo echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo echo DEBUG=${{ secrets.DEBUG }} >> .env
            sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env

            cd infra/
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose up -d --build
            sudo docker-compose exec backend poetry run python manage.py makemigrations
            sudo docker-compose exec backend poetry run python manage.py migrate
            sudo docker-compose exec backend poetry run python manage.py collectstatic --no-input
